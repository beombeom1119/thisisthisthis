[{"C:\\Potof\\this\\client\\src\\index.js":"1","C:\\Potof\\this\\client\\src\\App.js":"2","C:\\Potof\\this\\client\\src\\reportWebVitals.js":"3","C:\\Potof\\this\\client\\src\\components\\Customer.js":"4","C:\\Potof\\this\\client\\src\\components\\CustomerAdd.js":"5","C:\\Potof\\this\\client\\src\\components\\Header.js":"6","C:\\Potof\\this\\client\\src\\components\\Table.js":"7","C:\\Potof\\this\\client\\src\\components\\HairCheck.js":"8"},{"size":500,"mtime":1612454818000,"results":"9","hashOfConfig":"10"},{"size":2445,"mtime":1612701891903,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1612454818000,"results":"12","hashOfConfig":"10"},{"size":566,"mtime":1612696473981,"results":"13","hashOfConfig":"10"},{"size":2762,"mtime":1612702654022,"results":"14","hashOfConfig":"10"},{"size":912,"mtime":1612702874291,"results":"15","hashOfConfig":"10"},{"size":2862,"mtime":1612701256420,"results":"16","hashOfConfig":"10"},{"size":314,"mtime":1612701371208,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1g31db2",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Potof\\this\\client\\src\\index.js",[],["38","39"],"C:\\Potof\\this\\client\\src\\App.js",["40"],"import React,{Component} from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport {withStyles} from '@material-ui/core/styles';\n\n\n\nconst styles = theme => ({\n  root : {\n    width : '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX:\"auto\"\n  },\n    table:{\n      minWidth:1080\n    },\n    progress:{\n      margin : theme.spacing.unit*2\n    }\n})\n\n\n\n\n\n\nclass App extends Component{\n\n\n\n  constructor(props)     \n  {\n    super(props);\n    this.state={\n      customers:'',\n      completed:0\n    }\n  }\n\n  stateRefresh= () => {           //state 초기화 \n    this.setState(\n      {\n        customers:'',\n        completed:0\n      });\n      this.callApi().then(res=> this.setState({customers:res})) \n      .catch(err=> console.log(err+\"에러\"));\n\n  }\n\n\n  \n  componentDidMount() {\n    this.timer = setInterval(this.progress,20);\n    this.callApi().then(res=> this.setState({customers:res})) \n    .catch(err=> console.log(err));    // 가져온 JSON값을 customers에 저장\n  }\n  \n  callApi = async() =>{\n    const response = await fetch('/api/customers');  //server.js 에 있는 /api/customers JSON값을 가져온다\n    const body = await response.json();\n    return body;\n  }\n  \n\n  progress = () => {\n    const {completed} =this.state;\n    this.setState({ completed: completed>=100? 0 : completed+1});\n  }\n\n  \n  render()\n  \n  {\n    const {classes} =this.props;\n    return(\n      <div>\n        <Header/>\n        {/* <Predict></Predict> */}\n      {/* <Paper className={classes.root}>\n        <Table className={classes.table}>\n        <TableHead>\n          <TableCell>번호</TableCell>\n          <TableCell>유저넘버</TableCell>\n          <TableCell>깊이</TableCell>\n          <TableCell>길이</TableCell>\n        </TableHead> <TableBody>\n        {this.state.customers ? this.state.customers.map(customer=> {return (<Customer key = {customer.id} id = {customer.id} userNum = {customer.userNum} depth={customer.depth} distance={customer.distance} >  </Customer>)\n        }): \n        <TableRow><TableCell colSpan=\"4\" align=\"center\">\n          <CircularProgress className={classes.progress} variant=\"determinate\" value ={this.state.completed}>\n          </CircularProgress> </TableCell> </TableRow>\n        } </TableBody> </Table> </Paper> */}\n      {/* <CustomerAdd stateRefresh = {this.stateRefresh}></CustomerAdd> */}\n      \n      </div>\n      \n     \n    );\n  }\n}\n\n\nexport default withStyles(styles)(App);\n","C:\\Potof\\this\\client\\src\\reportWebVitals.js",[],"C:\\Potof\\this\\client\\src\\components\\Customer.js",[],"C:\\Potof\\this\\client\\src\\components\\CustomerAdd.js",[],"C:\\Potof\\this\\client\\src\\components\\Header.js",[],"C:\\Potof\\this\\client\\src\\components\\Table.js",["41"],"import React,{Component} from 'react';\r\nimport Customer from './Customer';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport HairCheck from './HairCheck'\r\n\r\nconst styles = theme => ({\r\n  root : {\r\n    width : '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX:\"auto\"\r\n  },\r\n    table:{\r\n      minWidth:1080\r\n    },\r\n    progress:{\r\n      margin : theme.spacing.unit*2\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Predict extends Component{\r\n\r\n  \r\n  constructor(props)     \r\n  {\r\n    super(props);\r\n    this.state={\r\n      customers:'',\r\n      completed:0\r\n    }\r\n  }\r\n\r\n  stateRefresh= () => {           //state 초기화 \r\n    this.setState(\r\n      {\r\n        customers:'',\r\n        completed:0\r\n        \r\n      });\r\n      this.callApi().then(res=> this.setState({customers:res})) \r\n      .catch(err=> console.log(err));\r\n     \r\n  }\r\n\r\n\r\n  \r\n  componentDidMount() {\r\n    this.timer = setInterval(this.progress,20);\r\n    this.callApi().then(res=> this.setState({customers:res})) \r\n    .catch(err=> console.log(err));    // 가져온 JSON값을 customers에 저장\r\n  }\r\n  \r\n  callApi = async() =>{\r\n    const response = await fetch('/api/customers');  //server.js 에 있는 /api/customers JSON값을 가져온다\r\n    const body = await response.json();\r\n    return body;\r\n  }\r\n  \r\n\r\n  progress = () => {\r\n    const {completed} =this.state;\r\n    this.setState({ completed: completed>=100? 0 : completed+1});\r\n  }\r\n\r\n  \r\n  render()\r\n  \r\n  {\r\n    \r\n    const {classes} =this.props;\r\n    return(\r\n      <div>\r\n      <Paper className={classes.root}>\r\n        <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableCell>번호</TableCell>\r\n          <TableCell>유저넘버</TableCell>\r\n          <TableCell>깊이</TableCell>\r\n          <TableCell>길이</TableCell>\r\n          <TableCell>날짜</TableCell>\r\n        </TableHead> <TableBody>\r\n        {this.state.customers ? this.state.customers.map(customer=> {return (<Customer key = {customer.id} id = {customer.id} userNum = {customer.userNum} depth={customer.depth} distance={customer.distance} date={customer.date} >  </Customer>)\r\n        }): \r\n        <TableRow><TableCell colSpan=\"5\" align=\"center\">\r\n          <CircularProgress className={classes.progress} variant=\"determinate\" value ={this.state.completed}>\r\n          </CircularProgress> </TableCell> </TableRow>\r\n        } </TableBody> </Table> </Paper>\r\n\r\n      </div>\r\n      \r\n     \r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Predict);\r\n","C:\\Potof\\this\\client\\src\\components\\HairCheck.js",[],["42","43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":75,"column":12,"nodeType":"50","messageId":"51","endLine":75,"endColumn":19},{"ruleId":"48","severity":1,"message":"52","line":11,"column":8,"nodeType":"50","messageId":"51","endLine":11,"endColumn":17},{"ruleId":"44","replacedBy":"53"},{"ruleId":"46","replacedBy":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","'HairCheck' is defined but never used.",["55"],["56"],"no-global-assign","no-unsafe-negation"]