[{"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\this - 복사본\\client\\src\\index.js":"1","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\this - 복사본\\client\\src\\reportWebVitals.js":"2","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\this - 복사본\\client\\src\\App.js":"3","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\this - 복사본\\client\\src\\components\\Login.js":"4","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\this - 복사본\\client\\src\\components\\Predict.js":"5","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\this - 복사본\\client\\src\\components\\Table.js":"6","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\this - 복사본\\client\\src\\components\\TableBody.js":"7"},{"size":500,"mtime":1612454818000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1612454818000,"results":"10","hashOfConfig":"9"},{"size":1741,"mtime":1613824592000,"results":"11","hashOfConfig":"9"},{"size":2516,"mtime":1613908372000,"results":"12","hashOfConfig":"9"},{"size":3610,"mtime":1613908916000,"results":"13","hashOfConfig":"9"},{"size":2332,"mtime":1613903544000,"results":"14","hashOfConfig":"9"},{"size":619,"mtime":1613822894000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1q479o8",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\this - 복사본\\client\\src\\index.js",[],["35","36"],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\this - 복사본\\client\\src\\reportWebVitals.js",[],"C:\\Users\\qjarl\\OneDrive\\바탕 화면\\this - 복사본\\client\\src\\App.js",["37"],"import React,{Component} from 'react';\nimport './App.css';\n\nimport {withStyles} from '@material-ui/core/styles';\n\nimport Login from './components/Login';\n\n\n\nconst styles = theme => ({\n  root : {\n    width : '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX:\"auto\"\n  },\n    table:{\n      minWidth:1080\n    },\n    progress:{\n      margin : theme.spacing.unit*2\n    }\n})\n\n\n\n\n\n\nclass App extends Component{\n\n  constructor(props)     \n  {\n    super(props);\n    this.state={\n      customers:'',\n      completed:0\n    }\n  }\n\n  stateRefresh= () => {           //state 초기화 \n    this.setState(\n      {\n        customers:'',\n        completed:0\n      });\n      this.callApi().then(res=> this.setState({customers:res})) \n      .catch(err=> console.log(err+\"에러\"));\n\n  }\n\n\n  \n  componentDidMount() {\n    this.timer = setInterval(this.progress,20);\n    this.callApi().then(res=> this.setState({customers:res})) \n    .catch(err=> console.log(err));    // 가져온 JSON값을 customers에 저장\n  }\n  \n  callApi = async() =>{\n    const response = await fetch('/api/predict');  //server.js 에 있는 /api/customers JSON값을 가져온다\n    const body = await response.json();\n    return body;\n  }\n\n  // callApi1 = async() =>{\n  //   const response = await fetch('/api/result');  //server.js 에 있는 /api/customers JSON값을 가져온다\n  //   const body = await response.json();\n  //   return body;\n  // }\n\n\n \n\n  progress = () => {\n    const {completed} =this.state;\n    this.setState({ completed: completed>=100? 0 : completed+1});\n  }\n\n  \n  render()\n  \n  {\n    const {classes} =this.props;\n    return(\n      <div>\n      <Login/>\n              \n      </div>\n      \n     \n    );\n  }\n}\n\n\nexport default withStyles(styles)(App);\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\this - 복사본\\client\\src\\components\\Login.js",["38","39"],"import React, { Component } from 'react'\r\nimport Predict from './Predict';\r\nimport '../App.css';\r\n\r\nexport default class Login extends Component {\r\n    constructor(props){   // 초기 설정\r\n        super(props);\r\n        this.state={\r\n            userNum:\"\",\r\n            name:\"\",\r\n            isLogin:false,\r\n        }\r\n    }\r\n   \r\n    handleLogin = e =>{\r\n        e.preventDefault() //페이징 이동 없게\r\n        const login_info={\r\n            method:\"POST\",\r\n            body: JSON.stringify(this.state),\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            }\r\n        };\r\n\r\n        fetch(\"/api/login\",login_info).then(res => {\r\n            return res.json();\r\n        })\r\n        .then(json=> {\r\n            console.log(json[0])\r\n            console.log(\"checkpoint1\")\r\n            if(json[0]!= undefined){\r\n                window.localStorage.setItem(\"userInfo\",JSON.stringify(json))\r\n                this.setState(\r\n                    {\r\n                        userNum : json[0].usernum,\r\n                        name:json[0].name,\r\n                        isLogin:true\r\n                    } );\r\n                    var confirm_test = window.confirm(this.state.name+\"님이 맞으신가요?\");\r\n                    console.log(this.state.isLogin)\r\n            }\r\n            else {\r\n                alert(\"아이디 혹은 비밀번호를 확인하세요\");\r\n            }\r\n       \r\n        // if ( confirm_test == true ) {\r\n        //   e.preventDefault()\r\n        // }\r\n         \r\n    });\r\n}\r\n\r\n    handleuserNum = e =>{\r\n        this.setState(\r\n            {\r\n                userNum: e.target.value\r\n            \r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n      \r\n\r\n\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"login-page\">\r\n                {\r\n                    this.state.isLogin ===false ?  (  \r\n                        <div className=\"form\">\r\n                        <form className=\"login-form\" onSubmit={this.handleLogin}>\r\n                        <div >유저키 입력!</div>\r\n                        <input  type=\"password\" value={this.state.userNum} onChange={this.handleuserNum}></input><br></br>\r\n                        <button  type=\"submit\">로그인</button>\r\n                        </form>\r\n                    </div>) : (<div><Predict name={this.state.name} userNum={this.state.userNum} isLogin={this.state.isLogin}></Predict></div>)\r\n                }\r\n              \r\n            </div>\r\n        )\r\n    }\r\n\r\n    }\r\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\this - 복사본\\client\\src\\components\\Predict.js",["40"],"import React, { Component, Fragment } from 'react'\r\nimport { post } from 'axios';\r\nimport Table from './Table'\r\nimport '../App.css';\r\n\r\nexport default class Predict extends Component {\r\n    static defaultProps = {\r\n        isLogin:\"\",\r\n        name:\"\",\r\n      }\r\n    constructor(props){\r\n    super(props);\r\n    this.state={\r\n        userNum: this.props.userNum,\r\n        depth : \"\",\r\n        distance : \"\",\r\n        isLogin: null\r\n    }\r\n    this.handleValueChange = this.handleValueChange.bind(this)   \r\n    this.addpredict = this.addpredict.bind(this) \r\n}\r\n\r\n\r\nstateRefresh=() => {\r\n    console.log(\"checkpoin4\")\r\n    this.setState(\r\n        {\r\n            predict:\"\",\r\n            completed:0\r\n        }\r\n    );\r\n\r\n  \r\n    this.callApi().then(res=> this.setState({predict:res})).catch(err=> console.log(err))\r\n}\r\n\r\n\r\nhandleFormPredict=(e) =>{\r\n    e.preventDefault()\r\n    console.log(\"checkpoint2\")\r\n    this.addresult()\r\n    .then((response)=> {\r\n        console.log(\"!!!!!!!\"+response.data);\r\n    })\r\n    this.addpredict()\r\n    .then((response)=> {\r\n        console.log(\"!!!!!!!\"+response.data);\r\n    })\r\n    // this.setState(\r\n    //     {\r\n    //     depth : \"\",\r\n    //     distance : \"\",\r\n    //     userNum:\"\",\r\n    //     }\r\n    // )\r\n    alert(\"전송완료!\")\r\n}\r\n\r\nhandleValueChange=(e) => {\r\n    console.log(\"checkpoint1\")\r\n   let nextState={};\r\n   nextState[e.target.name] = e.target.value;\r\n   this.setState(nextState)\r\n\r\n\r\n   \r\n   \r\n}\r\n\r\n\r\n  \r\n\r\n\r\n    addpredict= () => {\r\n        const url ='/api/predict';\r\n        const formData = new FormData();\r\n        formData.append('userNum',this.props.userNum);\r\n        formData.append('distance',this.state.distance);\r\n        formData.append('depth',this.state.depth);\r\n        const config = {\r\n            headers:{\r\n                'content-type' : 'multipart/form-data'\r\n            }\r\n        }\r\n        return post(url,formData,config);\r\n        \r\n    }\r\n\r\n\r\n    addresult= () => {\r\n        const url ='/api/result';\r\n        const formData = new FormData();\r\n        formData.append('userNum',this.props.userNum);\r\n        formData.append('distance',this.state.distance);\r\n        formData.append('depth',this.state.depth);\r\n        const config = {\r\n            headers:{\r\n                'content-type' : 'multipart/form-data'\r\n            }\r\n        }\r\n        return post(url,formData,config);\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    \r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"login-page\">\r\n                {\r\n                    this.props.isLogin===true ? (       \r\n                    <div className=\"form\">\r\n                        <h1>{this.props.isLogin}</h1>\r\n                        <h1>{this.props.name}님이 로그인 하셨습니다~</h1>\r\n                        <form onSubmit={this.handleFormPredict}>\r\n                        <input type=\"text\" name =\"depth\"value={this.state.depth} onChange={this.handleValueChange} placeholder=\"깊이\"></input>\r\n                        <input type=\"text\" name =\"distance\" value={this.state.distance} onChange={this.handleValueChange} placeholder=\"너비\"></input>\r\n                        <input type=\"hidden\" value={this.props.name} ></input>\r\n                        <button type=\"submit\">제출</button>\r\n                       \r\n                        </form>\r\n        </div>) : \r\n        (<div>로그인 해주세요~</div>)\r\n                }\r\n\r\n                \r\n                <Table name={this.props.name} userNum ={this.state.userNum}> name={this.props.name}</Table>\r\n\r\n         \r\n            </div>\r\n            \r\n        ) \r\n    }\r\n}\r\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\this - 복사본\\client\\src\\components\\Table.js",["41"],"import React, { Component } from 'react'\r\nimport ResultTable from './TableBody'\r\nimport { get } from 'axios';\r\nimport '../App.css';\r\n\r\nexport default class Table extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            userNum: this.props.userNum,\r\n            name: this.props.name,\r\n        }\r\n    }\r\n    \r\n    stateRefresh= () => {           //state 초기화 \r\n        this.setState(\r\n          {\r\n            result:'',\r\n            completed:0\r\n            \r\n          });\r\n          this.callApi().then(res=> this.setState({result:res})) \r\n          .catch(err=> console.log(err));\r\n         \r\n      }\r\n\r\n      componentDidMount() {\r\n        const login_info={\r\n            method:\"POST\",\r\n            body: JSON.stringify(this.state),\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            }\r\n        };\r\n        fetch(\"/api/login\",login_info).then(res => {\r\n            return res.json();\r\n        })\r\n        this.timer = setInterval(this.progress,20);\r\n        this.callApi().then(res=> this.setState({result:res})) \r\n        .catch(err=> console.log(err));    // 가져온 JSON값을 customers에 저장\r\n      }\r\n      \r\n      callApi = async() =>{\r\n        const response = await fetch('/api/result');  //server.js 에 있는 /api/customers JSON값을 가져온다\r\n        const body = await response.json();\r\n        console.log(body)\r\n        return body;\r\n        \r\n      }\r\n      \r\n    \r\n\r\n    \r\n        \r\n\r\n     \r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n             {this.state.userNum} {this.state.name}\r\n             <br></br>\r\n             <br></br><br></br><br></br><br></br><br></br><br></br>\r\n        <tablehead>\r\n          <tablecell>번호</tablecell>\r\n          <tablecell>유저넘버</tablecell>\r\n          <tablecell>깊이</tablecell>\r\n          <tablecell>길이</tablecell>\r\n          <tablecell>날짜</tablecell>\r\n        </tablehead>\r\n        <tablebody>\r\n        {this.state.result ? this.state.result.map(result=> {return (<ResultTable key = {result.id} id = {result.id} userNum = {result.userNum} depth={result.depth} distance={result.distance} date={result.date} >  </ResultTable>)\r\n        }): (<div>zxczx</div>)\r\n        \r\n        } </tablebody>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\qjarl\\OneDrive\\바탕 화면\\this - 복사본\\client\\src\\components\\TableBody.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":83,"column":12,"nodeType":"48","messageId":"49","endLine":83,"endColumn":19},{"ruleId":"50","severity":1,"message":"51","line":31,"column":23,"nodeType":"52","messageId":"53","endLine":31,"endColumn":25},{"ruleId":"46","severity":1,"message":"54","line":39,"column":25,"nodeType":"48","messageId":"49","endLine":39,"endColumn":37},{"ruleId":"46","severity":1,"message":"55","line":1,"column":28,"nodeType":"48","messageId":"49","endLine":1,"endColumn":36},{"ruleId":"46","severity":1,"message":"56","line":3,"column":10,"nodeType":"48","messageId":"49","endLine":3,"endColumn":13},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'confirm_test' is assigned a value but never used.","'Fragment' is defined but never used.","'get' is defined but never used.","no-global-assign","no-unsafe-negation"]